<?php

namespace app\admin\controller;

use think\Db;
use app\admin\controller\Base;
use think\session;

class Distribute extends Base
{

    /**
     * 收入统计
     */
    public function index()
    {
        $agentid  = input("agentId");
        $regstart = input("startTime");
        $regend   = input("endTime");
        $month    = input("month");
        $proxy    = session("proxy");


        $where  = array();
        $team   = Db::name("teamlevel")->where(["parent_id" => $proxy["code"]])->select();
        $team   = array_column($team, 'proxy_id');
        $team[] = $proxy["code"];


        if ($agentid) {
            if (!in_array($agentid, $team)) {
                $where['a.proxy_id'] = 'false';
            } else {
                $where['a.proxy_id'] = $agentid;
            }

        } else {
            $where['a.proxy_id'] = ['in', $team];
        }

        $wheredate = [];
        $whereeach = [];
        if (!empty($regstart)) {
            if (!empty($regend)) {
                $where['a.day']   = array(array('egt', $regstart), array('elt', $regend));
                $wheredate['day'] = array(array('egt', $regstart), array('elt', $regend));
                $whereeach['addtime'] = array(array('egt', $regstart), array('elt', $regend));
            } else {
                $where['a.day']   = array('egt', $regstart);
                $wheredate['day'] = array('egt', $regstart);
                $whereeach['addtime'] = array('egt', $regstart);
            }
        }


        if (!$month) {
            $list = Db::name('spreadsum')
                ->alias('a')
                ->field('a.day time,a.proxy_id,sum(a.paynum) paynum, sum(a.bindnum) bindnum,sum(a.regnum) regnum,sum(a.totaltax) totaltax,sum(a.checknum) checknum,b.nickname')
                ->join('proxy b', ' a.proxy_id=b.code ', "LEFT")
                ->where($where)
                ->order('a.day desc')
                ->group('a.day, a.proxy_id')
                ->paginate(10, false, ['query' => request()->param()])
                ->each(function ($item, $key) {
                    $item['totaltax'] = round($item['totaltax'], 3);

                    $proxy    = session("proxy");
                    $getmoney = Db::name('incomelog')->where([
                        'from_id'   => $item['proxy_id'],
                        'proxy_id'  => $proxy['code'],
                        'createday' => $item['time'],
                    ])->sum('changmoney');

                    $item['getmoney'] = round($getmoney,3);
                    return $item;
                });
        } else {
            $list = Db::name('spreadsum')
                ->alias('a')
                ->field('a.week time, a.weekstart,a.weekend,a.proxy_id,sum(a.paynum) paynum, sum(a.bindnum) bindnum,sum(a.regnum) regnum,sum(a.totaltax) totaltax,sum(a.checknum) checknum,b.nickname')
                ->join('proxy b', ' a.proxy_id=b.code ', "LEFT")
                ->where($where)
                ->order('a.week desc')
                ->group('a.week, a.proxy_id,a.weekstart,a.weekend')
                ->paginate(10, false, ['query' => request()->param()])
                ->each(function ($item, $key) {
                    $item['totaltax'] = round($item['totaltax'], 3);

                    $proxy    = session("proxy");
                    $getmoney = Db::name('incomelog')->where([
                        'from_id'   => $item['proxy_id'],
                        'proxy_id'  => $proxy['code'],
                        'week' => $item['time'],
                    ])->sum('changmoney');

                    $item['getmoney'] = round($getmoney,3);
                    return $item;
                });
        }


        $sumdata = Db::name('spreadsum')
            ->alias('a')
            ->field('sum(a.regnum) regnum,sum(a.totaltax) totaltax')
            ->where($where)
            ->find();

        if (!$sumdata['regnum']) {
            $sumdata['regnum'] = 0;
        }
        if (!$sumdata['totaltax']) {
            $sumdata['totaltax'] = 0;
        }
        $sumdata['totaltax'] = round($sumdata['totaltax'], 3);

        $wheredate['proxy_id'] = $proxy["code"];
        $selfIn             = Db::name('spreadsum')->field('sum(totalin) totalin')->where($wheredate)->find();
        $sumdata['totalin'] = round($selfIn['totalin'], 3);


        $this->assign('list', $list);
        $this->assign('sumdata', $sumdata);
        $this->assign("agentid", $agentid);
        $this->assign("regstart", $regstart);
        $this->assign("regend", $regend);
        $this->assign("proxy", $proxy);
        $this->assign("month", $month);
        return $this->fetch('distribute/index');
    }

    /*
     * 收入明细
     */
    public function incomeDetail()
    {
        $gamerId  = input("gamerId");
        $gameType = input("gameType");
        $startime = input("startTime");
        $endTime  = input("endTime");

        $searchProxy = input('proxyId');

        $proxy_id = session("proxy_id");
        $proxy    = session("proxy");

//        $strwhere = ' 1=1';
        $where   = array();
        $whereOr = array();
        if ($proxy_id != 1 && !$searchProxy) {
//            $where['a.parent_id'] = $proxy_id;
            $whereOr['a.parent_id'] = $proxy_id;
//            $strwhere = " a.parent_id='" . $proxy_id . "'";
        }

        if (!empty($gamerId)) {
            $where["a.userid"]   = $gamerId;
            $whereOr['a.userid'] = $gamerId;
//            $strwhere          .= " and a.userid=" . $gamerId;
        }

        if (!empty($gameType)) {
            $where["a.gameid"]   = $gameType;
            $whereOr["a.gameid"] = $gameType;
//            $strwhere          .= " and a.gameid=" . $gameType;
        }

        if ($searchProxy) {
            $where['a.proxy_id'] = $searchProxy;
            if ($searchProxy != $proxy_id) {//排除自己的情况
                $where['a.parent_id'] = $proxy_id;
            }

//            $strwhere          .= " and a.proxy_id='" . $searchProxy."'";
        }

//        $where["a.proxy_id"] = $proxy_id;
        if (!empty($startime)) {
            if (!empty($endTime)) {
                $where['a.addtime']   = array(array('gt', $startime), array('lt', str_replace('-', '/', $endTime)));
                $whereOr['a.addtime'] = array(array('gt', $startime), array('lt', str_replace('-', '/', $endTime)));
//                $strwhere           .= " and a.addtime>'" . str_replace('-', '/', $startime) .
//                    "' and a.addtime<='" . str_replace('-', '/', $endTime) . "'";
            } else {
                $where['a.addtime']   = array('gt', str_replace('-', '/', $startime));
                $whereOr['a.addtime'] = array('gt', str_replace('-', '/', $startime));
//                $strwhere           .= " and a.addtime>'" . str_replace('-', '/', $startime) . "'";
            }
        } else {
            $where['a.addtime']   = array('gt', str_replace('-', '/', date('Y-m-d')));
            $whereOr['a.addtime'] = array('gt', str_replace('-', '/', date('Y-m-d')));
        }


        $list = Db::name("playerorder")->alias('a')
            ->field("a.proxy_id,a.userid,a.gameid,a.game,a.total_tax,b.percent,a.createtime")
            ->join(" proxy b ", " a.proxy_id=b.code", "LEFT")
            ->where($where)
            ->whereor($whereOr)
            ->order("a.createtime desc")
            ->paginate(15, false, ['query' => request()->param()]);

        $sumdata = Db::name("playerorder")->alias('a')
            ->field("sum(total_tax) totaltax")
            ->where($where)
            ->whereor($whereOr)
            ->find();


        $this->assign("list", $list);
        $this->assign("sumdata", $sumdata);
        $this->assign("gamerid", $gamerId);
        $this->assign("proxy", $proxy);
        $this->assign('proxyid', $searchProxy);
        $this->assign("starttime", $startime);
        $this->assign("endTime", $endTime);
        $this->assign("gameType", $gameType);
        $this->assign("gametypeList", config('gametype'));
        return $this->fetch('distribute/incomedetail');
    }


    public function playerDetail()
    {

        $gamerId  = input("gamerId");
        $startime = input("startTime");
        $endTime  = input("endTime");

        $proxy_id = session("proxy_id");
        $proxy    = session("proxy");

        $startime1 = $startime . " 00:00:00";
        $endTime1  = $endTime . " 23:59:59";

        $where = array();

        //管理员查全部
        $strwhere = $proxy_id == 1 ? " 1=1" : "a.parent_id='" . $proxy_id . "'";
        if (!empty($gamerId)) {
            $where["a.userid"] = $gamerId;
            $strwhere          .= " and a.userid='{$gamerId}'";
        }

        if ($proxy_id != 1) {
            $where["a.proxy_id"] = $proxy_id;
        }

        if (!empty($startime1)) {
            if (!empty($endTime)) {
                $where['a.regtime'] = array(array('gt', $startime1), array('lt', $endTime1));
                $strwhere           .= " and a.regtime>'" . $startime1 . "' and a.regtime<'" . $endTime1 . "'";
            } else {
                $where['a.regtime'] = array('gt', $startime1);
                $strwhere           .= " and a.regtime>'" . $startime1 . "'";
            }
        }

        $list = Db::name("player")->alias('a')
            ->field(" a.proxy_id,a.userid,a.proxy_name,a.nickname,a.ismobile,a.regtime,a.addtime")
            ->join(" proxy b ", " a.proxy_id=b.code", "LEFT")
            ->where($where)
            ->whereor($strwhere)
            ->order("a.regtime desc")
            ->paginate('15', false, ['query' => request()->param()])
            ->each(function ($item, $key) {
                $tax              = Db::name('playerorder')
                    ->where(['userid' => $item['userid'], 'proxy_id' => $item['proxy_id']])
                    ->sum('total_tax');
                $item['totaltax'] = $tax;
                return $item;
            });

        $this->assign("list", $list);
        $this->assign("gamerid", $gamerId);
        $this->assign("proxy", $proxy);
        $this->assign("starttime", $startime);
        $this->assign("endTime", $endTime);
        return $this->fetch();
    }


    public function OrderDetail()
    {

        $gamerId  = input("gamerId");
        $startime = input("startTime");
        $endTime  = input("endTime");

        $proxy_id = session("proxy_id");
        $proxy    = session("proxy");

        $startime1 = $startime . " 00:00:00";
        $endTime1  = $endTime . " 23:59:59";
        $where     = array();
        $strwhere  = "a.parent_id='" . $proxy_id . "'";
        if (!empty($gamerId)) {
            $where["a.userid"] = $gamerId;
            $strwhere          .= " and a.userid='{$gamerId}'";
        }

        $where["a.proxy_id"] = $proxy_id;
        if (!empty($startime1)) {
            $startime1 = str_replace("-", "/", $startime1);
            $endTime1  = str_replace("-", "/", $endTime1);
            if (!empty($endTime)) {
                $where['a.createtime'] = array(array('gt', $startime1), array('lt', $endTime1));
                $strwhere              .= " and a.createtime>'" . $startime1 . "' and a.createtime<'" . $endTime1 . "'";
            } else {
                $where['a.createtime'] = array('gt', $startime1);
                $strwhere              .= " and a.createtime>'" . $startime1 . "'";
            }
        }

        $list = Db::name("playerorder")->alias('a')
            ->field(" a.proxy_id,a.userid,b.nickname,a.game,a.total_tax,a.createtime,a.addtime")
            ->join(" proxy b ", " a.proxy_id=b.code", "LEFT")
            ->where($where)
            ->whereor($strwhere)->order("a.createtime desc")
            ->paginate('15');

        $this->assign("list", $list);
        $this->assign("gamerid", $gamerId);
        $this->assign("proxy", $proxy);
        $this->assign("starttime", $startime);
        $this->assign("endTime", $endTime);
        return $this->fetch();
    }
}